{"version":3,"sources":["components/Image.tsx","components/Div.tsx","components/Span.tsx","components/MovieMetadata.tsx","state/actions/movie-search.action-types.ts","state/actions/actions.ts","components/MovieDetail/MovieDetail.tsx","state/reducers/movies-search.reducer.ts","state/reducers/index.ts","state/store.ts","components/Button.tsx","components/Textbox.tsx","components/Radio.tsx","components/Search/Search.tsx","components/Link.tsx","components/Header.tsx","components/Card.tsx","components/Anchor.tsx","components/MovieCard/MovieCard.tsx","components/MovieList.tsx","ErrorBoundry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Image","styled","img","props","getWidth","small","medium","FlexDiv","div","OutlinedSpan","span","MovieMetadata","title","type","year","genre","rating","votes","actors","language","country","Title","Small","Genres","genres","split","Container","map","g","MovieSearchActionTypes","searchAction","movies","search","page","SEARCH_MOVIES","payload","nextPageAction","NEXT_PAGE","MovieDetail","src","poster","alt","imdbRating","imdbVotes","plot","initialState","text","rootReducer","combineReducers","searchMovies","state","action","DEFAULT","middlewares","thunkMiddleware","store","createStore","applyMiddleware","Button","button","theme","fg","bg","InvertedButton","Textbox","input","Radio","attrs","Label","label","selected","RadioWithLabel","id","name","value","children","onChange","e","target","htmlFor","Search","onSearch","useState","setSearch","setYear","setType","Form","onSubmit","preventDefault","formSubmit","placeholder","form","CardLink","Link","Header","header","Card","a","href","MovieCard","Capitalize","MovieList","movie","to","imdbID","Year","Type","Poster","logger","console","AppErrorBoundary","hasError","error","errorInfo","this","_","Component","MovieSearchView","lazy","MovieDetailView","App","path","fallback","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bb08b37.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\ninterface ImageProps {\r\n    small?: boolean,\r\n    medium?: boolean,\r\n}\r\n\r\nexport const Image = styled.img<ImageProps>`\r\n    width: ${props => getWidth(props)};\r\n`;\r\n\r\n\r\nconst getWidth = ({ small, medium }: ImageProps) => {\r\n    if(small) {\r\n        return '110px';\r\n    }\r\n\r\n    if(medium) {\r\n        return '300px';\r\n    }\r\n\r\n    return 'inherit';\r\n}","import styled from \"styled-components\";\r\n\r\nexport const FlexDiv = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const OutlinedSpan = styled.span`\r\n    border: 1px solid black;\r\n    border-radius: 12px;\r\n    padding: 0px 10px 2px 10px;\r\n    margin-right: 5px;\r\n`;\r\n\r\n","import { Icon } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { OutlinedSpan } from \"./Span\";\r\n\r\ninterface Props {\r\n    title?: string,\r\n    type?: string,\r\n    year?: string,\r\n    genre?: string,\r\n    rating?: string,\r\n    votes?: string,\r\n    actors?: string,\r\n    language?: string,\r\n    country?: string\r\n}\r\nconst MovieMetadata = ({ title, type, year, genre, rating, votes, actors, language, country }: Props) => {\r\n    return (\r\n        <>\r\n            <Title>{title}</Title>\r\n            <Small>{type}</Small>\r\n            <Small>{year}</Small>\r\n            <Genres genres={genre?.split(',') || []} />\r\n            <Container>\r\n                <Icon>star</Icon>\r\n                <span>{rating}</span>\r\n            </Container>\r\n            <Container>\r\n                <Icon>thumb_up</Icon>\r\n                <span>{votes}</span>\r\n            </Container>\r\n            <Container>\r\n                {actors}\r\n            </Container>\r\n            <Container>\r\n                {language}\r\n            </Container>\r\n            <Container>\r\n                {country}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Title = styled.div`\r\n    font-size: 2em;\r\n    font-variant: small-caps\r\n`;\r\n\r\nconst Small = styled.div`\r\n    font-size: 1em;\r\n    font-variant: small-caps\r\n`;\r\n\r\nconst Container = styled.div`\r\n\r\n    margin: 15px 0px;\r\n`;\r\n\r\nconst Genres = ({ genres }: { genres: string[] }) => {\r\n    return (\r\n        <Container>\r\n            {genres.map((g) => <OutlinedSpan key={g}>{g}</OutlinedSpan>)}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport { MovieMetadata }","import { Action } from \"redux\";\r\nimport { MovieSearchState } from \"../interfaces\";\r\n\r\nexport enum MovieSearchActionTypes {\r\n    SEARCH_MOVIES = 'SEARCH_MOVIES',\r\n    NEXT_PAGE = 'SEARCH_MOVIES_NEXT_PAGE',\r\n    DEFAULT = 'sSEARCH_DEFAULT'\r\n}\r\n\r\nexport interface MovieAction extends Action<MovieSearchActionTypes> {\r\n    payload: MovieSearchState\r\n}","import { Movie } from \"../../services\";\r\nimport { MovieSearchActionTypes } from \"./movie-search.action-types\";\r\n\r\ninterface SearchParams {\r\n    text: string, year?: string, type?: string\r\n}\r\n\r\nconst searchAction = (movies: Movie[], search: SearchParams, page: number) => {\r\n    return ({\r\n        type: MovieSearchActionTypes.SEARCH_MOVIES,\r\n        payload: {\r\n            movies,\r\n            search,\r\n            page\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst nextPageAction = (movies: Movie[], search: SearchParams, page: number) => {\r\n    return ({\r\n        type: MovieSearchActionTypes.NEXT_PAGE,\r\n        payload: {\r\n            movies,\r\n            search,\r\n            page\r\n        }\r\n    });\r\n}\r\n\r\nexport { searchAction, nextPageAction };\r\nexport type { SearchParams };\r\n","import styled from \"styled-components\";\r\n\r\nimport { FlexDiv } from '../Div';\r\nimport { Image } from '../Image';\r\nimport { MovieMetadata } from '../MovieMetadata';\r\n\r\ninterface MovieDetailProps {\r\n    poster?: string,\r\n    title?: string,\r\n    type?: string,\r\n    year?: string,\r\n    genre?: string,\r\n    imdbRating?: string,\r\n    imdbVotes?: string,\r\n    actors?: string,\r\n    language?: string,\r\n    country?: string,\r\n    plot?: string,\r\n}\r\n\r\nconst MovieDetail = (props: MovieDetailProps) => {\r\n    return (\r\n        <>\r\n            <FlexDiv>\r\n                <Image medium src={props?.poster} alt=\"Poster not found\"></Image>\r\n                <Container>\r\n                    <MovieMetadata title={props?.title}\r\n                        type={props?.type}\r\n                        year={props?.year}\r\n                        genre={props?.genre}\r\n                        rating={props?.imdbRating}\r\n                        votes={props?.imdbVotes}\r\n                        actors={props?.actors}\r\n                        language={props?.language}\r\n                        country={props?.country} />\r\n                </Container>\r\n            </FlexDiv>\r\n            <hr/>\r\n            <p>{props?.plot}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    margin: 0px 20px;\r\n`;\r\n\r\nexport default MovieDetail;","import { MovieSearchActionTypes, MovieAction } from \"../actions\";\r\nimport { MovieSearchState } from \"../interfaces\";\r\n\r\nconst moviesSearchReducer = (state = initialState, action: MovieAction): MovieSearchState => {\r\n    switch (action.type) {\r\n        case MovieSearchActionTypes.SEARCH_MOVIES:\r\n            return ({\r\n                movies: action.payload.movies,\r\n                search: action.payload.search,\r\n                page: action.payload.page\r\n            });\r\n        case MovieSearchActionTypes.NEXT_PAGE:\r\n            return ({\r\n                ...state,\r\n                movies: [...state.movies, ...action.payload.movies],\r\n                page: action.payload.page\r\n            });\r\n        case MovieSearchActionTypes.DEFAULT:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialState: MovieSearchState = {\r\n    movies: [],\r\n    search: {\r\n        text: '',\r\n        year: '',\r\n        type: ''\r\n    },\r\n    page: 0\r\n}\r\n\r\nexport { moviesSearchReducer };\r\n","import { combineReducers } from 'redux';\r\nimport { moviesSearchReducer } from './movies-search.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    searchMovies: moviesSearchReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { logger } from 'redux-logger';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst middlewares: any[] = [thunkMiddleware];\r\n\r\nif(process.env.NODE_ENV === `development`) {\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport { store };    \r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  color: ${props => props.theme.fg};\r\n  border: 2px solid ${props => props.theme.bg};\r\n  background: ${props => props.theme.bg};\r\n\r\n  font-size: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const InvertedButton = styled(Button)`\r\n  color: ${props => props.theme.bg};\r\n  border: 2px solid ${props => props.theme.bg};\r\n  background: ${props => props.theme.fg};\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Textbox = styled.input`\r\n    color: ${props => props.theme.bg };\r\n    border: 1px solid ${props => props.theme.bg };\r\n\r\n    padding: 0.35em 1em;\r\n    border-radius: 3px;\r\n    cursor: text;\r\n`;","import { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Radio = styled.input.attrs(() => ({\r\n    type: \"radio\"\r\n}))`\r\n    display: none;\r\n`;\r\n\r\ninterface LabelProps {\r\n    selected?: boolean;\r\n}\r\n\r\nexport const Label = styled.label<LabelProps>`\r\n    color: ${props => props.selected ? props.theme.fg : props.theme.bg };\r\n    border: 1px solid ${props => props.theme.bg };\r\n    background-color: ${props => props.selected ? props.theme.bg : props.theme.fg };\r\n\r\n    \r\n    font-size: 1em;\r\n    margin: 0px -1px;\r\n    padding: 0.17em 1em 0.30em 1em;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: ${props => props.theme.bg };\r\n        color: ${props => props.theme.fg };\r\n    }\r\n`;\r\n\r\ninterface RadioProps {\r\n    id: string, \r\n    name: string, \r\n    value: string, \r\n    children: ReactNode,\r\n    onChange: (value: string) => void,\r\n    selected?: boolean\r\n}\r\n\r\nexport const RadioWithLabel = ({id, name, value, children, onChange, selected }: RadioProps) => {\r\n    return (\r\n        <>\r\n            <Radio name={name} \r\n                   id={id} \r\n                   value={value}\r\n                   onChange={ e => onChange(e.target.value)}/>\r\n            <Label htmlFor={id} selected={selected}>\r\n                {children}\r\n            </Label>\r\n        </>\r\n    );\r\n}\r\n","import { FormEvent, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SearchParams } from \"../../state\";\r\n\r\nimport { Button } from \"../Button\";\r\nimport { RadioWithLabel } from \"../Radio\";\r\nimport { Textbox } from \"../Textbox\";\r\n\r\nconst Search = ({ onSearch }: Props) => {\r\n    const [search, setSearch] = useState<string>('');\r\n    const [year, setYear] = useState<string>('');\r\n    const [type, setType] = useState<string>('');\r\n\r\n    const formSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        onSearch({\r\n            text: search,\r\n            year,\r\n            type\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={e => formSubmit(e)}>\r\n            <Container>\r\n                <Textbox type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={search}\r\n                    onChange={(e: any) => setSearch(e.target.value)} />\r\n            </Container>\r\n            <Container>\r\n                <Textbox type=\"number\"\r\n                    placeholder=\"Year\"\r\n                    value={year}\r\n                    onChange={(e: any) => setYear(e.target.value)} />\r\n            </Container>\r\n            <Container>\r\n                    <RadioWithLabel name=\"type\"\r\n                        id=\"movie\"\r\n                        value=\"movie\"\r\n                        selected={'movie' === type}\r\n                        onChange={e => setType(e)}>\r\n                        Movie\r\n                    </RadioWithLabel>\r\n                    <RadioWithLabel name=\"type\"\r\n                        id=\"series\"\r\n                        value=\"series\"\r\n                        selected={'series' === type}\r\n                        onChange={e => setType(e)}>\r\n                        Series\r\n                    </RadioWithLabel>\r\n                    <RadioWithLabel name=\"type\"\r\n                        id=\"episode\"\r\n                        value=\"episode\"\r\n                        selected={'episode' === type}\r\n                        onChange={e => setType(e)}>\r\n                        Episode\r\n                    </RadioWithLabel>\r\n            </Container>\r\n            <Container>\r\n                <Button type=\"submit\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\n    margin: 1em\r\n`;\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\ninterface Props {\r\n    onSearch: (event: SearchParams) => void;\r\n}\r\n\r\nexport { Search }","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const CardLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: inherit;\r\n    cursor: default;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.header`\r\n    color: ${props => props.theme.fg};\r\n    background: ${props => props.theme.bg};\r\n\r\n    padding: 0em 1em;\r\n    display: flex;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Card = styled.div`\r\n    display: flex;\r\n    margin: 10px;\r\n    height: 150px;\r\n    width: 300px;\r\n    background: ${props => props.theme.fg};\r\n    overflow: hidden;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    box-shadow: 0 0 10px 5px #d0d0d0;\r\n\r\n    &:hover {\r\n        box-shadow: 0 0 10px 5px ${props => props.theme.bg};\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nconst ImdbAnchor = styled.a.attrs((attrs) => ({\r\n    href: `https://www.imdb.com/title/${attrs.href}`,\r\n    target: '_blank'\r\n}))`\r\n\r\n`;\r\n\r\nexport { ImdbAnchor }","import styled from 'styled-components';\r\n\r\nimport { Card } from '../Card';\r\nimport { Image } from '../Image';\r\n\r\ninterface Props {\r\n    title: string;\r\n    year: string;\r\n    type: string;\r\n    poster: string;\r\n}\r\n\r\nconst MovieCard = ({ title, year, type, poster }: Props) => {\r\n    return (\r\n        <Card>\r\n            <Image small src={poster} alt=\"Poster not found\"></Image>\r\n            <Container>\r\n                <Capitalize>{title}</Capitalize>\r\n                <div>{year}</div>\r\n                <Capitalize>{type}</Capitalize>\r\n            </Container>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Capitalize = styled.div`\r\n    text-transform: capitalize;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    margin: 10px;\r\n    padding: 0px;\r\n`;\r\n\r\nexport { MovieCard }\r\n","import { Movie } from \"../services\";\r\nimport { CardLink } from \"./Link\";\r\nimport { MovieCard } from \"./MovieCard\";\r\n\r\nconst MovieList = ({ movies }: { movies: Movie[] }) => {\r\n    return (\r\n        <>\r\n            { \r\n                movies?.map((movie) =>\r\n                    (<CardLink key={movie.imdbID} to={`/${movie.imdbID}`}>\r\n                        <MovieCard title={movie.Title}\r\n                            year={movie.Year}\r\n                            type={movie.Type}\r\n                            poster={movie.Poster} />\r\n                    </CardLink>))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport { MovieList };","import { Component, ErrorInfo, ReactNode } from \"react\";\r\n\r\nconst logger = console;\r\n\r\nclass AppErrorBoundary extends Component<{ children: ReactNode }, State> {\r\n    public state: State = {\r\n        hasError: false\r\n    };\r\n\r\n    public static getDerivedStateFromError(_: Error): State {\r\n        return { hasError: true };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n        logger.error(\"Uncaught error:\", error, errorInfo);\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Something went wrong. Please refresh the page. \r\n                For more info about error check console log</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\ninterface State {\r\n    hasError: boolean;\r\n}\r\n\r\nexport { AppErrorBoundary }","import { lazy, Suspense } from \"react\";\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { Header } from \"./components\";\r\nimport { store } from './state/store';\r\nimport { AppErrorBoundary } from \"./ErrorBoundry\";\r\n\r\nconst MovieSearchView = lazy(() => import('./views/MovieSearch'));\r\nconst MovieDetailView = lazy(() => import('./views/MovieDetailView'));\r\n\r\nconst theme = {\r\n  bg: \"#42a5f5\",\r\n  fg: \"white\"\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AppErrorBoundary>\r\n        <Provider store={store}>\r\n          <Router>\r\n            <ThemeProvider theme={theme}>\r\n              <Header>\r\n                <h3>Movie App</h3>\r\n              </Header>\r\n              <main>\r\n                <Switch>\r\n                  <Route path='/:id'>\r\n                    <Suspense fallback={<div>Loading...</div>}>\r\n                      <MovieDetailView />\r\n                    </Suspense>\r\n                  </Route>\r\n                  <Route path='/' exact>\r\n                    <Suspense fallback={<div>Loading...</div>}>\r\n                      <MovieSearchView />\r\n                    </Suspense>\r\n                  </Route>\r\n                </Switch>\r\n              </main>\r\n            </ThemeProvider>\r\n          </Router>\r\n        </Provider>\r\n      </AppErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}